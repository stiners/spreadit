@inherits LayoutComponentBase
@using Microsoft.Extensions.Configuration
@using SpreaditApp.Common;
@inject Services.ApiService ApiService
@inject IConfiguration Configuration

@if (_posts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table>
        <tr>
            <th>Title</th>
            <th>Content</th>
            <th colspan="3">Votes</th>
        </tr>
        @foreach (var post in _posts.OrderByDescending(p => p.Date))
        {
            <tr>
                <!-- 
                    These a href links will match the route in the page 'PostItem.razor'.
                    The route is defined as "/post/{id}" and the id is the post id.
                -->
                <td><a href="/post/@post.Id">@post.Title</a></td>
                <td>@post.Content</td>
                <td>@(post.Upvotes + post.Downvotes)</td>
                <td><button @onclick="() => Upvote(post.Id)">Upvote</button></td>
                <td><button @onclick="() => Downvote(post.Id)">Downvote</button></td>
                <td>@post.Date</td>
            </tr>
        }
    </table>

    <br/>
}

<CreatePost></CreatePost>

@code {
    private Post[] _posts;

    protected override async Task OnInitializedAsync()
    {
        _posts = await ApiService.GetPosts();
    }

    private async Task Upvote(int id)
    {
        var updatedPost = await ApiService.UpvotePost(id);
        UpdatePostInList(updatedPost);
        StateHasChanged();
    }

    private async Task Downvote(int id)
    {
        var updatedPost = await ApiService.DownvotePost(id);
        UpdatePostInList(updatedPost);
        StateHasChanged();
    }

    private void UpdatePostInList(Post updatedPost)
    {
        var index = Array.FindIndex(_posts, p => p.Id == updatedPost.Id);
        if (index != -1)
        {
            _posts[index] = updatedPost;
        }
    }
}